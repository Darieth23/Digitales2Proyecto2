module partoserial(
    //entradas
    input [7:0]data_in_0,
    input valid_in_0,
    input reset_L,
    input clk_8f,
    //salidas
    output reg data_out_P2S_0
    /*AUTOARG*/);

reg [7:0]data2send_0;
reg [3:0]contador_0;
always @(*)begin //Se verifica si pasa o no el valor dependiendo del bit de válido
    if(reset_L==0)begin //Todo apagado, se pasa el valor por defecto
        data2send_0='hBC;
    end
    else begin 
       if (valid_in_0==1)
            data2send_0=data_in_0;
        else //Valor por defecto
            data2send_0='hBC; 
    end
end
always @(posedge clk_8f)begin
    if(reset_L==0)begin
        data_out_P2S_0<='b0;
        contador_0<=0;
    end
    else begin    //Lógica para reconocer los valores del arreglo de bits
        data_out_P2S_0<=data2send_0[7-contador];
        contador_0<=contador_0+1;
        if(contador_0==7)begin
            contador_0<='b0;
        end
    end
end // always @ (posedge clk_8f)


endmodule
